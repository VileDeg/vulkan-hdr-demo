#version 460

#include "incl/defs.glsl"
#include "incl/compute_structs.glsl"
#include "incl/sampling.glsl"

#define GROUP_SIZE 1024
#define THREADS_X  32
#define THREADS_Y  32

#include "incl/compPC.incl"
pc;

layout (rgba32f, set = 0, binding = 0) uniform image2D lumImage[MAX_VIEWPORT_MIPS];
layout (rgba32f, set = 0, binding = 1) uniform image2D weightImage[MAX_VIEWPORT_MIPS];

layout (local_size_x = THREADS_X, local_size_y = THREADS_Y) in;
void main() {
	int i = pc.mipIndex;
	ivec2 dim = imageSize(lumImage[i]).xy;
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

	if (coords.x < dim.x && coords.y < dim.y) {
		ivec2 coordsHigher = coords << 1;

        vec4 pxLum	  = f3x3tent(lumImage[i-1], coordsHigher);
		vec4 pxWeight = f3x3tent(weightImage[i-1], coordsHigher);

		imageStore(lumImage[i], coords, pxLum);
		imageStore(weightImage[i], coords, pxWeight);
	}
}