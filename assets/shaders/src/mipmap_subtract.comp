#version 460

#include "incl/defs.glsl"

#define GROUP_SIZE 1024
#define THREADS_X  32
#define THREADS_Y  32

layout (set = 0, binding = 0) 
#include "incl/computeUB.incl" 
ub;

#include "incl/compPC.incl"
pc;

layout (rgba32f, set = 0, binding = 1) uniform readonly image2D inToSubtractImage[MAX_VIEWPORT_MIPS];
layout (rgba32f, set = 0, binding = 2) uniform readonly image2D inSubtractFromImage[MAX_VIEWPORT_MIPS];

layout (rgba32f, set = 0, binding = 3) uniform image2D outImage[MAX_VIEWPORT_MIPS];

layout (local_size_x = THREADS_X, local_size_y = THREADS_Y) in;
void main() {
	int i = pc.mipIndex;
	uvec2 dim = imageSize(inToSubtractImage[i]).xy;
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

	if (coords.x < dim.x && coords.y < dim.y) {
		vec3 px = imageLoad(inSubtractFromImage[i], coords).rgb - imageLoad(inToSubtractImage[i], coords).rgb;
		imageStore(outImage[i], coords, vec4(px, 1.0));
	}
}
