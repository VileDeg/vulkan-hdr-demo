#version 460

#include "incl/defs.glsl"
#include "incl/compute_structs.glsl"

#define GROUP_SIZE 1024
#define THREADS_X  32
#define THREADS_Y  32

layout (rgba32f, set = 0, binding = 0) uniform readonly image2D inLum;
layout (rgba32f, set = 0, binding = 1) uniform readonly image2D inWeight;

layout (rgba32f, set = 0, binding = 2) uniform writeonly image2D blendedLaplac;

layout (local_size_x = THREADS_X, local_size_y = THREADS_Y) in;
void main() {
	uvec2 dim = imageSize(inLum).xy;
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

	if (coords.x < dim.x && coords.y < dim.y) {
		vec4 lum = imageLoad(inLum, coords);
		vec4 weight = imageLoad(inWeight, coords);

		float blended = dot(lum.rgb, weight.rgb);

		imageStore(blendedLaplac, coords, vec4(vec3(blended), 1.0));
	}
}
