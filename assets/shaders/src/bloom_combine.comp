#version 460

#include "incl/defs.glsl"

#define THREADS_X  32
#define THREADS_Y  32

layout (set = 0, binding = 0) 
#include "incl/computeUB.incl" 
ub;

layout (rgba32f, set = 0, binding = 1) uniform image2D inOutImage;
layout (rgba32f, set = 0, binding = 2) uniform readonly image2D bloomImage;

layout (local_size_x = THREADS_X, local_size_y = THREADS_Y) in;
void main() {
	uvec2 dim = imageSize(inOutImage).xy;
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

	if (coords.x < dim.x && coords.y < dim.y) {
		vec3 color = imageLoad(inOutImage, coords).rgb;
		vec3 bloom = imageLoad(bloomImage, coords).rgb;

		// Apply bloom
		color = mix(color, bloom, ub.bloomHighlightsWeight);

		imageStore(inOutImage, coords, vec4(color, 1.0));
	}
}