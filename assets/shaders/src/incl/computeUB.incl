uniform ComputeUB {
    float minLogLum;
    float logLumRange;
    float oneOverLogLumRange;
    uint totalPixelNum; // unused

    float timeCoeff;
    uint lumLowerIndex;
    uint lumUpperIndex;
    float gamma;

    vec4 weights; // x - index weight, y - Undefined, z - await. lum. bin, w - awaited lum. weight

    float bloomThreshold;
    int toneMappingMode;
    int gammaMode; // unused
    float baseScale;

    float baseOffset;
    float sigmaS;
    float sigmaR;
    int numOfViewportMips;

    float shadowsExposure;
    float midtonesExposure;
    float highlightsExposure;
    float exposednessWeightSigma;

    float bloomHighlightsWeight;
}

