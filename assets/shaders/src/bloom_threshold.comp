#version 460

#include "incl/defs.glsl"

#define THREADS_X  32
#define THREADS_Y  32

layout (set = 0, binding = 0) 
#include "incl/computeUB.incl" 
ub;

layout (rgba32f, set = 0, binding = 1) uniform readonly image2D inImage;
layout (rgba32f, set = 0, binding = 2) uniform writeonly image2D outImage;

layout (local_size_x = THREADS_X, local_size_y = THREADS_Y) in;
void main() {
	uvec2 dim = imageSize(outImage).xy;
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

	if (coords.x < dim.x && coords.y < dim.y) {
		vec3 px = imageLoad(inImage, coords).rgb;

#if 0
		float lum = dot(px, RGB_TO_LUM);
		if (lum > ub.bloomThreshold) {
			imageStore(outImage, coords, vec4(px, 1.0));
		} else {
			imageStore(outImage, coords, vec4(vec3(0), 1.0));
		}
#else
		imageStore(outImage, coords, vec4(px, 1.0));
#endif
		
	}
}